name: 高级自动部署

on:
  push:
    branches: [ main, master, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      environment:
        description: '部署环境'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js环境
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 安装依赖
      run: npm ci
      
    - name: 代码质量检查
      run: |
        echo "检查项目结构..."
        if [ ! -f "src/compiler.js" ]; then
          echo "❌ 缺少编译脚本 src/compiler.js"
          exit 1
        fi
        if [ ! -f "src/template.html" ]; then
          echo "❌ 缺少HTML模板 src/template.html"
          exit 1
        fi
        echo "✅ 项目结构检查通过"
        
    - name: 编译测试
      run: npm run build
      
    - name: 验证编译结果
      run: |
        echo "验证编译结果..."
        if [ ! -f "dist/index.html" ]; then
          echo "❌ 编译失败：未找到dist/index.html"
          exit 1
        fi
        
        # 检查HTML文件是否包含必要的元素
        if ! grep -q "任务时间轴" dist/index.html; then
          echo "❌ HTML文件缺少必要内容"
          exit 1
        fi
        
        echo "✅ 编译验证通过"
        echo "文件大小: $(du -h dist/index.html | cut -f1)"
        
  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || github.event_name == 'pull_request'
    environment: staging
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js环境
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 安装依赖
      run: npm ci
      
    - name: 编译项目
      run: npm run build
      
    - name: 部署到Staging环境
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        destination_dir: staging
        force_orphan: true
        
    - name: 部署通知
      run: |
        echo "🚀 Staging环境部署成功！"
        echo "预览地址: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/staging/"
        
  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
    environment: production
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js环境
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 安装依赖
      run: npm ci
      
    - name: 编译项目
      run: npm run build
      
    - name: 部署到Production环境
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        force_orphan: true
        
    - name: 生产环境部署通知
      run: |
        echo "🎉 Production环境部署成功！"
        echo "生产地址: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/"
        
        # 如果是标签发布，添加版本信息
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
          echo "版本: $VERSION"
          echo "发布说明: https://github.com/${{ github.repository }}/releases/tag/$VERSION"
        fi
